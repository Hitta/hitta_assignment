//
//  ReviewViewController.swift
//  HittaTechAssignment
//
//  Created by Raluca Toadere on 08/12/2018.
//  Copyright (c) 2018 Raluca Toadere. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ReviewDisplayLogic: class {
}

class ReviewViewController: UIViewController, ReviewDisplayLogic {
    var interactor: ReviewBusinessLogic?
    var router: (NSObjectProtocol & ReviewRoutingLogic & ReviewDataPassing)?

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    override func viewDidLoad() {
        super.viewDidLoad()

        setupNavigationBar()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = ReviewInteractor()
        let presenter = ReviewPresenter()
        let router = ReviewRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
  }

    private func setupNavigationBar() {
        let closeButton = UIBarButtonItem(title: "Close",
                                          style: .plain,
                                          target: self,
                                          action: #selector(closeButtonTapped))
        navigationItem.leftBarButtonItem = closeButton

        let saveButton = UIBarButtonItem(title: "Save",
                                         style: .plain,
                                         target: self,
                                         action: #selector(saveButtonTapped))
        navigationItem.rightBarButtonItem = saveButton
    }

    @objc func closeButtonTapped() {
        showCancelActionSheet()
    }

    @objc func saveButtonTapped() {
        showSavedAlert()
    }

    private func showCancelActionSheet() {
        let actionSheet = UIAlertController(title: nil, message: nil, preferredStyle: .actionSheet)
        let exitAndSaveAction = UIAlertAction(title: "Exit and save your review",
                                              style: .default) { _ in
            self.router?.routeToCompanyPage()
        }
        actionSheet.addAction(exitAndSaveAction)

        let exitWithoutSavingAction = UIAlertAction(title: "Exit without saving",
                                                    style: .destructive) { _ in
            self.router?.routeToCompanyPage()
        }
        actionSheet.addAction(exitWithoutSavingAction)

        let cancelAction = UIAlertAction(title: "Cancel",
                                         style: .cancel,
                                         handler: nil)
        actionSheet.addAction(cancelAction)
        present(actionSheet, animated: true, completion: nil)
    }

    private func showSavedAlert() {
        showAlert(title: "Thank you for your review",
                  message: "You're helping others make smarter decisions every day",
                  cancelButtonTitle: "Okay!",
                  cancelHandler: {
            self.router?.routeToCompanyPage()
        })
    }
}
